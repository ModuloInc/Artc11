generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id       String    @id @default(uuid())
  fullname String?
  email    String    @unique
  password String?
  image    String?
  comments Comment[]
  posts    Post[]
  votes    Vote[]
}

model Question {
  id          String   @id @default(cuid())
  text        String
  imageUrl    String?
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?
  category    Category @relation(fields: [categoryId], references: [id])
  votes       Vote[]
}

model Vote {
  id         String   @id @default(cuid())
  value      Int
  userId     String
  questionId String
  createdAt  DateTime @default(now())
  question   Question @relation(fields: [questionId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@unique([userId, questionId])
}

model Category {
  id          String     @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  questions   Question[]
}

model News {
  id          String   @id @default(cuid())
  description String
  imageUrl    String
  createdAt   DateTime @default(now())
}

model ForumCategory {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  color     String
  bgColor   String
  iconPath  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

model Post {
  id              String        @id @default(cuid())
  title           String
  content         String
  forumCategoryId String
  authorId        String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  comments        Comment[]
  author          User          @relation(fields: [authorId], references: [id])
  category        ForumCategory @relation(fields: [forumCategoryId], references: [id])
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  postId    String
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
}

model EuropeanLaw {
  id          String   @id @default(cuid())
  title       String
  description String
  fullText    String
  imageUrl    String?
  category    String
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
