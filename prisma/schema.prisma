// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id       String  @id @default(uuid())
  fullname String?
  email    String  @unique
  password String?
  image    String?
  votes    Vote[]
}

model Question {
  id          String   @id @default(cuid())
  text        String
  imageUrl    String?
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  votes       Vote[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?
}

model Vote {
  id         String   @id @default(cuid())
  value      Int // 1 pour positif, 0 pour neutre, -1 pour n√©gatif
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  createdAt  DateTime @default(now())

  @@unique([userId, questionId]) // Un utilisateur ne peut voter qu'une fois par questions
}

model Category {
  id          String     @id @default(cuid())
  name        String
  description String?
  questions   Question[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model News {
  id          String   @id @default(cuid())
  description String
  imageUrl    String
  createdAt   DateTime @default(now())
}



model EuropeanLaw {
  id          String   @id @default(cuid())
  title       String
  description String
  fullText    String   @db.Text
  imageUrl    String?
  category    String
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
